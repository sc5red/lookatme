<!DOCTYPE html>
<html lang="en" <%- (typeof themeClass !== 'undefined' ? themeClass : '') %>>
<%- include('partials/head', { pageTitle: 'Login' }) %>
<body class="min-h-screen flex flex-col bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 m-0 p-0">
    <main class="flex-1 grid md:grid-cols-2 gap-0 min-h-screen">
        <!-- Left: Auth Card -->
        <section class="flex items-center justify-center p-4 md:p-6">
            <div class="w-full max-w-md">
                <div class="mb-8">
                    <h1 class="brand text-3xl md:text-4xl font-bold tracking-wider">LookAtMe</h1>
                    <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">Connect, share, and stay in touch.</p>
                </div>
                <div class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 shadow-sm rounded-xl p-6 md:p-8">
                    <!-- Tabs (visually) -->
                    <div class="flex mb-6 text-sm font-medium">
                        <button id="tab-login" class="flex-1 py-2 border-b-2 text-center transition-colors" data-active="true">Login</button>
                        <button id="tab-register" class="flex-1 py-2 border-b-2 text-center opacity-70 hover:opacity-100 transition-colors">Register</button>
                    </div>
                    <!-- Login Form -->
                    <div id="login-form-container">
                        <form id="login-form" class="space-y-5">
                            <div>
                                <label for="login-email" class="block text-xs font-semibold tracking-wide mb-1 uppercase text-gray-600 dark:text-gray-300">Email</label>
                                <input id="login-email" name="email" type="email" required class="w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="you@example.com" />
                            </div>
                            <div>
                                <label for="login-password" class="block text-xs font-semibold tracking-wide mb-1 uppercase text-gray-600 dark:text-gray-300">Password</label>
                                <input id="login-password" name="password" type="password" required class="w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="••••••••" />
                            </div>
                            <div class="flex items-center justify-between text-xs">
                                <label class="flex items-center gap-2 cursor-pointer select-none">
                                    <input type="checkbox" class="accent-blue-600" />
                                    <span>Remember me</span>
                                </label>
                                <button type="button" class="text-blue-600 hover:text-blue-500 font-medium">Forgot password?</button>
                            </div>
                            <button type="submit" class="w-full bg-blue-600 hover:bg-blue-500 text-white py-2.5 rounded-lg text-sm font-semibold shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-900">Sign In</button>
                            <p class="text-xs text-center text-gray-600 dark:text-gray-400">No account? <button type="button" id="inline-show-register" class="text-blue-600 hover:underline font-medium">Create one</button></p>
                        </form>
                    </div>
                    <!-- Register Form -->
                    <div id="register-form-container" class="hidden">
                        <form id="register-form" class="space-y-5">
                            <div>
                                <label for="register-name" class="block text-xs font-semibold tracking-wide mb-1 uppercase text-gray-600 dark:text-gray-300">Full Name</label>
                                <input id="register-name" name="name" type="text" required class="w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Jane Doe" />
                            </div>
                            <div>
                                <label for="register-email" class="block text-xs font-semibold tracking-wide mb-1 uppercase text-gray-600 dark:text-gray-300">Email</label>
                                <input id="register-email" name="email" type="email" required class="w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="you@example.com" />
                            </div>
                            <div>
                                <label for="register-password" class="block text-xs font-semibold tracking-wide mb-1 uppercase text-gray-600 dark:text-gray-300">Password</label>
                                <input id="register-password" name="password" type="password" required class="w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Create password" />
                            </div>
                            <div>
                                <label for="register-confirm" class="block text-xs font-semibold tracking-wide mb-1 uppercase text-gray-600 dark:text-gray-300">Confirm Password</label>
                                <input id="register-confirm" name="confirmPassword" type="password" required class="w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Repeat password" />
                            </div>
                            <button type="submit" class="w-full bg-green-600 hover:bg-green-500 text-white py-2.5 rounded-lg text-sm font-semibold shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 dark:focus:ring-offset-gray-900">Create Account</button>
                            <p class="text-xs text-center text-gray-600 dark:text-gray-400">Have an account? <button type="button" id="inline-show-login" class="text-blue-600 hover:underline font-medium">Sign in</button></p>
                        </form>
                    </div>
                    <!-- Error -->
                    <div id="error-message" class="hidden mt-4 p-3 bg-red-100 dark:bg-red-900 border border-red-300 dark:border-red-700 text-red-700 dark:text-red-100 rounded text-xs text-center"></div>
                    <!-- Theme toggle inline (mobile) -->
                    <div class="mt-6 flex justify-center md:hidden">
                        <button id="theme-toggle" class="bg-transparent border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 text-sm cursor-pointer rounded-full px-4 py-2 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200" title="Toggle theme">Toggle Theme</button>
                    </div>
                </div>
            </div>
        </section>
        <!-- Right: Illustration / Marketing -->
        <section class="hidden md:flex relative overflow-hidden h-full">
            <img src="/img/login-asset.png" alt="Welcome visual" class="absolute inset-0 w-full h-full object-cover select-none" />
        </section>
    </main>
    <script src="/js/script.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const loginContainer = document.getElementById('login-form-container');
            const registerContainer = document.getElementById('register-form-container');
            const tabLogin = document.getElementById('tab-login');
            const tabRegister = document.getElementById('tab-register');
            const inlineShowRegister = document.getElementById('inline-show-register');
            const inlineShowLogin = document.getElementById('inline-show-login');
            const loginForm = document.getElementById('login-form');
            const registerForm = document.getElementById('register-form');
            const errorMessage = document.getElementById('error-message');
            const themeToggle = document.getElementById('theme-toggle');

            // Form switching
                    function activateLogin(){
                        loginContainer.classList.remove('hidden');
                        registerContainer.classList.add('hidden');
                        tabLogin.dataset.active = 'true';
                        tabRegister.dataset.active = 'false';
                        tabLogin.classList.add('border-blue-600','text-blue-600');
                        tabRegister.classList.remove('border-blue-600','text-blue-600');
                        tabRegister.classList.add('opacity-70');
                        errorMessage.classList.add('hidden');
                    }
                    function activateRegister(){
                        registerContainer.classList.remove('hidden');
                        loginContainer.classList.add('hidden');
                        tabRegister.dataset.active = 'true';
                        tabLogin.dataset.active = 'false';
                        tabRegister.classList.add('border-blue-600','text-blue-600');
                        tabLogin.classList.remove('border-blue-600','text-blue-600');
                        tabLogin.classList.add('opacity-70');
                        errorMessage.classList.add('hidden');
                    }
                    tabLogin.addEventListener('click', activateLogin);
                    tabRegister.addEventListener('click', activateRegister);
                    inlineShowRegister?.addEventListener('click', activateRegister);
                    inlineShowLogin?.addEventListener('click', activateLogin);
                    activateLogin();

            // Show error message
            function showError(message) {
                errorMessage.textContent = message;
                errorMessage.classList.remove('hidden');
            }

            // Login form submission
            loginForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                errorMessage.classList.add('hidden');
                
                const formData = new FormData(loginForm);
                const data = Object.fromEntries(formData);
                
                try {
                    const response = await fetch('/auth/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        window.location.href = '/';
                    } else {
                        showError(result.error || 'Login failed. Please try again.');
                    }
                } catch (error) {
                    console.error('Login error:', error);
                    showError('Connection failed. Please try again.');
                }
            });

            // Register form submission
            registerForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                errorMessage.classList.add('hidden');
                
                const formData = new FormData(registerForm);
                const data = Object.fromEntries(formData);
                
                try {
                    const response = await fetch('/auth/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        window.location.href = '/';
                    } else {
                        showError(result.error || 'Registration failed. Please try again.');
                    }
                } catch (error) {
                    console.error('Registration error:', error);
                    showError('Connection failed. Please try again.');
                }
            });

            // Theme toggle functionality
              themeToggle?.addEventListener('click', function(){
                const root = document.documentElement;
                const isDark = root.classList.toggle('dark');
                localStorage.setItem('color-theme', isDark ? 'dark' : 'light');
                document.cookie = 'color-theme=' + (isDark ? 'dark' : 'light') + ';path=/;max-age='+(60*60*24*365);
              });
        });
          </script>
        </body>
        </html>